created: 20190918152949890
creator: Jerry
modified: 20190918155126758
modifier: Jerry
tags: [[OpenGL API]]
title: glTexSubImage1D glTextureSubImage1D
type: text/vnd.tiddlywiki

<<.warning WIP>>

glTexSubImage1D, glTextureSubImage1D — specify a one-dimensional texture subimage

```cpp
void glTexSubImage1D(GLenum target,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const GLvoid * pixels);
void glTextureSubImage1D(GLuint texture,GLint level,GLint xoffset,GLsizei width,GLenum format,GLenum type,const void *pixels);
```

!!Parameters

;  target 
:Specifies the target to which the texture is bound for ''glTexSubImage1D''. Must be ''GL_TEXTURE_1D''. 

;texture
:Specifies the texture object name for ''glTextureSubImage1D''. The effective target of texture must be one of the valid target values above. 

;  level 
:Specifies the level-of-detail number. Level 0 is the base image level. Level n is the nth mipmap reduction image. 

;xoffset
:Specifies a texel offset in the x direction within the texture array. 

; width 
:Specifies the width of the texture subimage. 

; format 
:Specifies the format of the pixel data. The following symbolic values are accepted: GL_RED, GL_RG, GL_RGB, GL_BGR, GL_RGBA, GL_DEPTH_COMPONENT, and GL_STENCIL_INDEX. 

; type
:Specifies the data type of the pixel data. The following symbolic values are accepted: GL_UNSIGNED_BYTE, GL_BYTE, GL_UNSIGNED_SHORT, GL_SHORT, GL_UNSIGNED_INT, GL_INT, GL_FLOAT, GL_UNSIGNED_BYTE_3_3_2, GL_UNSIGNED_BYTE_2_3_3_REV, GL_UNSIGNED_SHORT_5_6_5, GL_UNSIGNED_SHORT_5_6_5_REV, GL_UNSIGNED_SHORT_4_4_4_4, GL_UNSIGNED_SHORT_4_4_4_4_REV, GL_UNSIGNED_SHORT_5_5_5_1, GL_UNSIGNED_SHORT_1_5_5_5_REV, GL_UNSIGNED_INT_8_8_8_8, GL_UNSIGNED_INT_8_8_8_8_REV, GL_UNSIGNED_INT_10_10_10_2, and GL_UNSIGNED_INT_2_10_10_10_REV. 

; pixels
:Specifies a pointer to the image data in memory. 

!!notice
*If a non-zero named buffer object is bound to the ''GL_PIXEL_UNPACK_BUFFER ''target (see [[glBindBuffer]]) while a texture image is specified, pixels is treated as a byte offset into the buffer object's data store. 
```cpp
        // 2D for example.
        // bind the texture and PBO
        glBindTexture(GL_TEXTURE_2D, textureId);
        glBindBuffer(GL_PIXEL_UNPACK_BUFFER, pboIds[index]);

        // copy pixels from PBO to texture object
        // Use offset instead of pointer.
        glTexSubImage2D(GL_TEXTURE_2D, 0, 0, 0, IMAGE_WIDTH, IMAGE_HEIGHT, PIXEL_FORMAT,GL_UNSIGNED_BYTE, 0);
```

!!Version Support

|Function / Feature Name| OpenGL Version |<|<|<|<|<|<|<|<|<|<|<|
|~|2.0|2.1|3.0|3.1|3.2|3.3|4.0|4.1|4.2|4.3|4.4|4.5|
|glTexSubImage1D|✔|✔|✔|✔|✔|✔|✔|✔|✔|✔|✔|✔|
|glTextureSubImage1D| - | - | - | - | - | - | - | - | - | - | - |✔|