created: 20190818115801578
creator: Jerry
modified: 20190818115937276
modifier: Jerry
tags:  thinking
title: 离散累加的思考
type: text/vnd.tiddlywiki

首先我要说的是，“Discrete Accumulation（离散累加）”并不是一个术语，仅仅是方便沟通的一种名词表示。我们一般用离散的方式去模拟连续信号在一个时间点上的切片状态，然后用离散累加的方式模拟连续信号在一个时间点上的状态，这里注意理解“切片状态”与“状态”。

      切片状态就是从一个更加细粒度的视角去审视时间点上的状态，比如一个粗糙的表面，光会从四面八方照射过来然后向四面八方反射出去，所有的这些光经过物理规律照亮了表面，在一个时间点上表面会呈现一种固定的状态。而我们在用光追模拟这种效果的时候，不可能在一帧的时间内处理完所有这些光线（因为这样的光线我们认为有无穷多个），这就需要在一个较大粒度的时间范围内用一条条简单的离散光线，利用离散累加的方式去模拟时间点上的状态。这里的每一条光线计算的结果就是切片状态，而累加之后就是所要模拟的状态。

      切片的状态的计算我觉得应该简单，最好也是离散的，这样说的依据就是“用离散模拟连续”。就像MonteCarlo方法利用“在里面还是在外面”这样简单的非0即是1的思想一样，我所认同的也是如此，这里需要说明的是“非0即是1”并非只有0或者1，而是想表达两种状态，也可以是-1与0，或者-1与1等等。举个例子，我们尝试用10000个离散信号模拟连续的范围在-1到1的信号，比如要模拟0，那么就让5000个左右的离散信号表示-1，5000个左右表示1，这样累加下来的均值基本就是在0附近；要模拟数字1，就让绝大多数是1，偶尔几个是-1无所谓，均值依然偏向1；要模拟-0.04，那么就让5200个表示-1，4800个表示1，均值便是-0.04

      光追中的AO算法我采用的就是这种思想。表面像素最终颜色的修正值是个范围在0.f到1.f的连续浮点数，而具体的值是靠不停的离散累加均值来计算的，不过在我的算法中还有对其距离的考虑。 