created: 20190818110438614
creator: Jerry
modified: 20190827144448342
modifier: Jerry
tags: Gaming thinking
title: 《消灭星星》手游移植后记
type: text/vnd.tiddlywiki

几天前BOSS叫我到办公室，说是希望将Cocos2d-x版本的《消灭星星》移植成使用我们Mirage1引擎的版本。我当然欣然接收，因为我喜欢具有挑战行的工作，并立下军令状：一个星期搞定。在移植过程中，免不了磕磕碰碰，因为你总是在“原作者应该是这么个意思”的思想模式下进行，时间长了、见识的框架多了后，这思想便会稍微好点，一来自己认为的基本正确，二来就算错了用自己的思路也可以成事。如果你够牛逼，原作者的程序漏洞你都能发现并且修复，但有些坑是非踩不可的，比如Cocos的坐标系是在游戏窗口左下角的，而AS的是在左上角。我整个工作是从简单了解Cocos框架开始的，紧接着将必须做的事情先行搞定，比如资源，我可不希望这些东西在我思考逻辑的时候来烦我。最后就开始拜读游戏逻辑。几遍下来后自然收获不小，开始琢磨哪些需要大改那些不需要。最后的结论是：我希望按照Cocos那种框架来搭建AS版本的逻辑，着手大改关于特效与动作的逻辑（因为两者相差太大）。于是开始写AS关于Cocos结构基本相同的功能模块、逻辑，比如Cocos的Director、Scene等。一开是自然进行的顺利，当游戏可以在Mirage运行的时候，当初一厢情愿的错误想法这便就爆发出来了：这些错误基本全部来自细节方面。细节的东西就需要断点一步步的查找，因为他们是Cocos与Mirage的在架构上的不同，不了解的开发者根本不可能预知。慢慢感觉自己一周时间说的有点唐突（虽然结果确实是一周），于是我不得不拿出大量的自己非工作时间去延长移植时间。

总结下来，至少有这么几点：

*    不了解的东西，不可一厢情愿的认为他是怎么样，有时候它可能会很糟糕；
*    对于未知事物的判断，可以从不同的方面采样，比如同事的口碑，网络的言语，自己的理解，产品出现的时间，官方对其的重视度等；
*    对这些事情时间的预估，尽量从自己的热情度、熟悉程度、处理内容的数量方面考虑，认同墨菲定律； 

1. 我此前公司独立开发的能在pc、移动端播放类flash文件的虚拟机。 