created: 20190827152620126
creator: Jerry
modified: 20200109154618969
modifier: Nancy
tags: [[Philosophy and thoughts]] Project
title: TileEngine
type: text/vnd.tiddlywiki

等待补充

[[ECS开发思想]]

首先说一下，我试图设计一个尽可能高效的格子碰撞系统，整个表现效果可以直观的参考《冒险岛》游戏。

下面记录下一个粒子与格子的碰撞，不考虑粒子之间的碰撞。此前一直将格子的种类限制在具体格子上，比如墙格子、软墙格子，梯子格子，斜面格子等。这样一直困扰着我，比如东西站在平面上往前走，前面是个向下的斜面，如何让其继续贴着斜面前进？粒子是不是要实时检测下面格子的类型，不然如何知晓下面的格子是个斜面格子？诸如此类。我现在的想法是对格子的分类不再局限于具体的东西，而是扩大了范围，出现了一些“抽象”的格子，比如委托格子，传感器格子。

! 基于格子的碰撞

格子引擎或者说基于格子的碰撞系统，它的核心必须是用当前对象所处的位置及其该位置下格子的类型，决定对象的位置与行为。基于格子的碰撞没有优秀物理引擎的宽检测与精细检测等不同的阶段，可以说它就只有宽检测阶段，这样势必效率高，

!! 格子引擎想法

我没有细看各种不同格子引擎的实现逻辑，但一本书中写了几种不同的格子，比如地面格子、墙格子，在我简单的具体实现中发现他们并不是很灵活。没错，具体的格子其存在的价值我并不否认，我只是在其中加入了一些更加“抽象“的格子，增加了引擎灵活性。

!! 委托格子

格子引擎或者说基于格子的碰撞系统，它的核心必须是用当前对象所处的格子的类型，决定对象的位置与行为。当物体当前所在格子为空，而脚下是墙面的话，我们可以停止物体每帧向下掉落的碰撞检测逻辑以提高性能，只处理物体左右移动的逻辑。但是当物体移动到地面的边缘后，自然就要处理掉落逻辑，问题就在于如何判断脚下的格子是空格子而非地面格子？我们刚才说了每帧不做检测。
