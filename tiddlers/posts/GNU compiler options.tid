created: 20191215032322387
creator: Jerry
modified: 20191215033815518
modifier: Jerry
tags: sidelight linux
title: GNU compiler options
type: text/vnd.tiddlywiki


今天在gnu中使用了这样的命令，让我总是编译不过，还是too young too simple!

` g++ -std=c++11 -g -Wall -ansi -pedantic test.cpp -o out.exe`

错误的地方就是，我是用了c++11标准，又向编译器说明我需要的是ansi标准（如果将`-ansi`放在`-std=c++11`之前，后者会顶掉前面的），导致我始终编译不过去，说是需要添加对c++11的支持，最后问题定位到`-ansi`，真是自惭形愧啊。下面收集并整理部分gnu命令行参数：

|选项|解释|
|-ansi|只支持 ANSI 标准的 C 语法。这一选项将禁止 GNU C 的某些特色， 例如 asm 或 typeof 关键词。|
|-E|只运行 C 预编译器。|
|-c|只编译并生成目标文件。|
|-o|FILE 生成指定的输出文件。用在生成可执行文件时。|
|-DMACRO|以字符串"1"定义 MACRO 宏。|
|-DMACRO=DEFN|以字符串"DEFN"定义 MACRO 宏。|
|-UMACRO|取消对 MACRO 宏的定义。|
|-g|生成调试信息。GNU 调试器可利用该信息。|
|-IDIRECTORY|指定额外的头文件搜索路径DIRECTORY。|
|-LDIRECTORY|指定额外的函数库搜索路径DIRECTORY。|
|-lLIBRARY|连接时搜索指定的函数库LIBRARY。|
|-m486|针对 486 进行代码优化。|
|-O0|不进行优化处理。|
|-O|或 -O1 优化生成代码。|
|-O2|进一步优化。|
|-O3|比 -O2 更进一步优化，包括 inline 函数。|
|-shared|生成共享目标文件。通常用在建立共享库时。|
|-static|禁止使用共享连接。|
|-w|不生成任何警告信息。|
|-Wall|生成所有警告信息。|
